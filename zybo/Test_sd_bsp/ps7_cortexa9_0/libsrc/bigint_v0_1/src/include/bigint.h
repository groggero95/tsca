/*
 * Copyright (C) EURECOM, Telecom Paris
 *
 * Prof. Renaud PACALET         <renaud.pacalet@telecom-paristech.fr>
 * Alberto ANSELMO              <Alberto.Anselmo@eurecom.fr>
 * Simone Alessandro CHIABERTO	<Simone-Alessandro.Chiaberto@eurecom.fr>
 * Fausto CHIATANTE             <Fausto.Chiatante@eurecom.fr>
 * Giulio ROGGERO               <Giulio.Roggero@eurecom.fr>
 *
 * This file must be used under the terms of the CeCILL. This source
 * file is licensed as described in the file COPYING, which you should
 * have received as part of this distribution. The terms are also
 * available at:
 * http://www.cecill.info/licences/Licence_CeCILL_V1.1-US.txt
*/

#ifndef BIGINT_H
#define BIGINT_H

#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include "xil_printf.h"


//Following number has to be a multiple of 32
#define INT_SIZE 128
#define VAR_SIZE 32
#define VERSION 0
#define TESTNUM 10000
#define BLINDING 0
#define NUMB_SIZE INT_SIZE/VAR_SIZE + 1
#define HEX_DIGIT VAR_SIZE/4
#define BYTE_NUMB INT_SIZE/8
#define LOG_CIPHER 0
#define TEST_MESSAGE 0

#if INT_SIZE == 64
static const char ONE[] = "0x0000000000000001";
static const char ZERO[] = "0x0000000000000000";
#elif INT_SIZE == 128
static const char ONE[] = "0x00000000000000000000000000000001";
static const char ZERO[] = "0x00000000000000000000000000000000";
#elif INT_SIZE == 256
static const char ONE[] = "0x0000000000000000000000000000000000000000000000000000000000000001";
static const char ZERO[] = "0x0000000000000000000000000000000000000000000000000000000000000000";
#elif INT_SIZE == 512
static const char ONE[] = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
static const char ZERO[] = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
#elif INT_SIZE == 1024
static const char ONE[] = "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
static const char ZERO[] = "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
#elif INT_SIZE == 2048
static const char ONE[] = "0x
static const char ZERO[] = "0x
#elif INT_SIZE == 4096
static const char ONE[] = "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
static const char ZERO[] = "0x
#endif

#if VAR_SIZE == 64
#define UMAX 0xFFFFFFFFFFFFFFFF
#define HIMASK 0xFFFFFFFF00000000
#define LOMASK 0x00000000FFFFFFFF
typedef uint64_t var_t;
#elif VAR_SIZE == 32
#define UMAX 0xFFFFFFFF
#define HIMASK 0xFFFF0000
#define LOMASK 0x0000FFFF
typedef uint32_t var_t;
#elif VAR_SIZE == 16
#define UMAX 0xFFFF
#define HIMASK 0xFF00
#define LOMASK 0x00FF
typedef uint16_t var_t;
#elif VAR_SIZE == 8
#define UMAX 0xFF
#define HIMASK 0xF0
#define LOMASK 0x0F
typedef unit8_t var_t;
#endif


// Structure to be used for the operations
typedef struct bigint {
    //Field to store the actual value
    var_t numb[NUMB_SIZE] __attribute__ ((aligned(32)));
    //Field to store the alignment of the value
    //uint16_t pos;
} bigint_t;

typedef struct key_pair{
  bigint_t public;
  bigint_t modulus;
  bigint_t private;
  bigint_t k0;
  bigint_t vi;
  bigint_t vf;
} key_p;

extern key_p pair;

int eq(bigint_t first, bigint_t second);
int df(bigint_t first, bigint_t second);
int gt(bigint_t first, bigint_t second);
int ge(bigint_t first, bigint_t second);
int lt(bigint_t first, bigint_t second);
int le(bigint_t first, bigint_t second);

bigint_t and (bigint_t a, bigint_t b);
bigint_t or (bigint_t a, bigint_t b);
bigint_t not(bigint_t a);
bigint_t xor(bigint_t a, bigint_t b);
bigint_t lsr(bigint_t a, int pl);
bigint_t lsl(bigint_t a, int pl);

bigint_t sum(bigint_t a, bigint_t b);
bigint_t sub(bigint_t a, bigint_t b);
bigint_t mul(bigint_t a, bigint_t b);

bigint_t init(const char *s);
bigint_t rand_b( void );

var_t sum_4_mul(var_t *a, var_t b, var_t *carry, int act);
void print_to_stdout(bigint_t *a);

bigint_t MM_big(bigint_t a, bigint_t b, bigint_t n, int nb);
bigint_t ME_big(bigint_t e, bigint_t m, bigint_t n, bigint_t k0, int nb);
bigint_t ME_big_blind(bigint_t e, bigint_t m, bigint_t n, bigint_t k0, int nb);


#if VAR_SIZE == 32
	#if INT_SIZE == 128
		#if VERSION == 0
			#define PUBLIC_INIT  {0x00010001, 	   	 0, 		 0, 		 0,   0 }
			#define MODULUS_INIT {0x611e915d, 0xaf122700, 0x05e3454b, 0xc26e8d21, 0 }
			#define PRIVATE_INIT {0xe2ced7d5, 0xb5d6200b, 0xb1ffacf0, 0x0745812b, 0 }
			#define K0_INIT      {0x1b11ba4f, 0x6ec8719a, 0x98cfac7a, 0x8354f24c, 0 }
			#define VI_INIT      {0x4179d9f8, 0x2d8c132e, 0xa87bff65, 0x02bbe7e3, 0 }
			#define VF_INIT      {0xe4aa88f4, 0x97729a00, 0x532d7be1, 0x987641e5, 0 }
		#elif VERSION == 1
			#define PUBLIC_INIT  {0x00010001, 	   	  0, 		  0, 		  0,  0 }
			#define MODULUS_INIT {0x981737a1, 0xe525a5c4, 0xb0042610, 0x5f4c6991, 0 }
			#define PRIVATE_INIT {0xef853e09, 0xc42fbc87, 0x2608895d, 0x4c0929ca, 0 }
			#define K0_INIT      {0x6da92934, 0x9284de3f, 0x3cea5241, 0x0424eafd, 0 }
			#define VI_INIT      {0xd4e61f56, 0xc4483ced, 0x525f955b, 0xd468e2d8, 0 }
			#define VF_INIT      {0x18c3827b, 0x9ffc04bb, 0xe05c0ffc, 0x43b1f794, 0 }
		#elif VERSION == 2
			#define PUBLIC_INIT  {0x00010001, 	   	  0, 		  0, 		  0, 0 }
			#define MODULUS_INIT {0x6fc04a59, 0x638add6c, 0xa6c85dd4, 0xc8aed04d, 0 }
			#define PRIVATE_INIT {0x86e63f81, 0x56ef00ff, 0xa890cd43, 0x2845ecc7, 0 }
			#define K0_INIT      {0x64ab8335, 0x7c099ce7, 0x5c75b713, 0x64d8149d, 0 }
			#define VI_INIT      {0x26d6b13a, 0x45799301, 0x5aed97fb, 0x568a6604, 0 }
			#define VF_INIT      {0x83886aa0, 0x13930862, 0x9576704a, 0x5b250b29, 0 }
		#endif
	#elif INT_SIZE == 256
		#if VERSION == 0
			#define PUBLIC_INIT  {0x98558527, 0xae3e61b5, 0x0618fe72, 0x0acd8d8c, 0x3606dffc, 0x7a96a03f, 0xffdafedd, 0x171f87ec, 0 }
			#define MODULUS_INIT {0x13eeb33b, 0xd9a60b51, 0x336cfe29, 0xa95a284a, 0x1ac92506, 0xb1314c5a, 0x9879989b, 0x8ae8fe50, 0 }
			#define PRIVATE_INIT {0x5ae8f2b7, 0x57bef4e8, 0x63746e99, 0x149c23bd, 0x27a4d839, 0x705cac6d, 0xf22da2e0, 0x1d8232d4, 0 }
			#define K0_INIT      {0xe3ed6b07, 0x7f35a915, 0x4f74695f, 0xfb28e4c0, 0x38ca8ed7, 0x94860bac, 0x387c47a6, 0x2792adec, 0 }
			#define VI_INIT      {0x00fea35e, 0xb062608c, 0x221611d2, 0xecefb47a, 0xf219bfa1, 0xc213747a, 0x2121b0b0, 0x235f21e0, 0 }
			#define VF_INIT      {0x0c235676, 0x4bd7cfe7, 0xbccce076, 0x25730c97, 0xc5dc76bc, 0x24ba2de5, 0x1e8212e1, 0x6e0583f1, 0 }
		#elif VERSION == 1
			#define PUBLIC_INIT  {0xaeee3251, 0x03a4714d, 0xe8b285b7, 0xa469381e, 0xa695054f, 0xedb5d53a, 0x88333ca6, 0x7821e769, 0 }
			#define MODULUS_INIT {0x4b7e8663, 0x724ae2dd, 0x22c4d131, 0x0254b338, 0x7f83ffa0, 0x2745b26d, 0x907ff14d, 0xbde5d7cd, 0 }
			#define PRIVATE_INIT {0xd9e166a1, 0xf114e510, 0xb79aa947, 0x320565f3, 0xa04b39e7, 0x124e3763, 0x2f9ec752, 0x34350b13, 0 }
			#define K0_INIT      {0x46958aae, 0xd7da9609, 0xc0a6a828, 0x66cbd8ba, 0xf69c0f7e, 0x8a925b9b, 0xbb897d38, 0x87f71b22, 0 }
			#define VI_INIT      {0x6ab91dd8, 0x0df49402, 0x1f2c8b32, 0x42c9ec54, 0x7f3841fd, 0x68b85dd8, 0xf77c63e9, 0x8eb0489c, 0 }
			#define VF_INIT      {0x4dc73556, 0xebef6a34, 0x205de819, 0x9ba12cff, 0x0215dfe8, 0x537d74da, 0x6bed7b3d, 0x4d53ecb6, 0 }
		#endif
	#elif INT_SIZE == 512
		#if VERSION == 0
			#define PUBLIC_INIT  {0xc959b781, 0xad7caad8, 0x07789b18, 0x58afeb26, 0x85475334, 0x78b636d5, 0x82b7ccf6, 0x6fc597b6, 0x4871526b, 0x624c7ac9, 0x59bec3b2, 0x267189bb, 0x296a6006, 0xf0e0ac0b, 0xe7541a10, 0xb65efa9b, 0 }
			#define MODULUS_INIT {0x3e1acc3d, 0x93b1a7c4, 0xee006472, 0x4cbc2d45, 0xea3a88f0, 0x916cab52, 0xca9f0880, 0x5c84712b, 0x73bba1b0, 0x9d88ed0c, 0xdef10426, 0x2b3be9c7, 0x065d1132, 0xf346ac3c, 0x730a5881, 0xf16ea639, 0 }
			#define PRIVATE_INIT {0x8e505ef1, 0xd18724cb, 0xf18f0c6e, 0x9709e4af, 0x0ced7ef5, 0x872f0299, 0x531a7afa, 0x814ea45a, 0x4c5ef1d5, 0xf79b3e97, 0xe520e88a, 0xeeee2c1e, 0x6ddaf173, 0x589eef5d, 0xc644ee4e, 0x05ffea52, 0 }
			#define K0_INIT      {0x3e6e6cea, 0x4ca499fd, 0x3ffb3baa, 0x1f90c86e, 0x26ee023a, 0x5cf4aa16, 0x5272bb77, 0xc3ff9aee, 0x2c62f57c, 0xccd10bb1, 0xc9e811b6, 0x782d4a53, 0x3f295163, 0xac60adf4, 0xe94f6b0d, 0x3160493b, 0 }
			#define VI_INIT      {0x00b0646b, 0x566c8ea0, 0xff70c90c, 0x6aaf4e1d, 0xa4eb8ccb, 0x827b22b2, 0x319e8ae4, 0x039f613c, 0x8fb5abf1, 0xaadd6f1b, 0xea8005b2, 0x029da3ec, 0x9ea4b6be, 0xd5e496f6, 0xfc5a34b8, 0x278008a8, 0 }
			#define VF_INIT      {0xcad47bab, 0xbff50594, 0x582a1681, 0x7a0ae537, 0x33374f78, 0x80c97299, 0x04bdebdb, 0x4cd0ae49, 0x70638d6d, 0xc2ebf5cc, 0x86e01037, 0x827164bb, 0xfb8f775e, 0xac6f73b5, 0x2412fdb0, 0x08a28928, 0 }
		#elif VERSION == 1
			#define PUBLIC_INIT  {0x855a0171, 0x5ffd04aa, 0xc5a09b78, 0x12b7268a, 0x98f34bba, 0x93f38ca3, 0x6fe2dfba, 0xb2ddc4df, 0x95e5af21, 0xfec59b43, 0x1a676347, 0xd08ae181, 0x87d871df, 0xbc542092, 0x81857506, 0x1e907e17, 0 }
			#define MODULUS_INIT {0xdc6204f1, 0xc3295f2f, 0x4b2dd74a, 0x5e44e43e, 0x092d510a, 0xf993c383, 0xcd0d962b, 0xe10f8eec, 0xe1985e8d, 0xf3b05bb2, 0xe9b06ad3, 0x1a297500, 0x81d05dd8, 0x51719806, 0xef03b60c, 0xb8db0a56, 0 }
			#define PRIVATE_INIT {0xec5c5cd1, 0xf3a977d1, 0x837fe64c, 0x227dd94b, 0x1a33d1c7, 0x7cb8f5df, 0x06eb139a, 0x693fa9b2, 0x48f558f0, 0xf21661ff, 0x026d0dc2, 0x3792f691, 0x596a33b5, 0x8de29403, 0x7018a85a, 0x191858e1, 0 }
			#define K0_INIT      {0xf381389b, 0x114468e4, 0x8a711239, 0x63e8b38c, 0xbdefa2cf, 0x1d123887, 0x2528bb9f, 0x5d51e52f, 0xf9eb5ca3, 0xafb1a94d, 0xad72bc61, 0x97aa79e7, 0x5d216d40, 0xf171d792, 0x48d03d9e, 0x30bed69e, 0 }
			#define VI_INIT      {0xde2a5c25, 0xba139a0a, 0x07cfbbf1, 0x97f6ab11, 0xd255a139, 0x054dc292, 0x9e39e329, 0x4fbed86f, 0x8a5141f2, 0x7c419368, 0x99fee985, 0x9d70bb1f, 0x709f9bb9, 0x667039ef, 0xb0cec2b3, 0x6af4aab7, 0 }
			#define VF_INIT      {0x33080ae0, 0x3dab59a9, 0xe349f5e0, 0x6edc8e45, 0x6d302b85, 0x8e7b6fa4, 0x7ec72712, 0x99dd1128, 0x67b03755, 0x3168f151, 0x79942c45, 0xde140d0f, 0x2f03d52e, 0xc7eb5683, 0xe876f90b, 0x4da285f1, 0 }
		#endif
	#elif INT_SIZE == 1024
		#if VERSION == 0
			#define PUBLIC_INIT  {0x5b05077d, 0xd9cbab3a, 0xcbd65c70, 0x7eb72b10, 0xa2f738e4, 0xb7e2c3b4, 0x0aa84c48, 0x82ac8546, 0x7123875c, 0xb09b1990, 0x6a5feec1, 0xe3b1bb4d, 0x228d1e11, 0x26a210e5, 0xcae48217, 0xf6e86a7d, 0xfc543694, 0x31760338, 0xcf880699, 0x1f508794, 0x22621015, 0xd67819a6, 0x132851b0, 0xd95936b5, 0x5fada6bf, 0x7676e8fc, 0x68932c00, 0xb3c7750c, 0xa82cba98, 0x424b0cfa, 0x8b62fed2, 0x9cd40933, 0 }
			#define MODULUS_INIT {0x1ff6030f, 0xe64b6529, 0xb306abc9, 0x5e9b1da1, 0xe1d613b8, 0xf78b4f6b, 0x46e07a71, 0x22aa6232, 0xd3b417ac, 0xc63604ca, 0x88dab1e7, 0xe92e3fd9, 0x3f6d0e60, 0x05a64201, 0xc275dab1, 0xf4d78086, 0x190e41fd, 0x78947e53, 0x40b38f8b, 0x24080922, 0xef2742ed, 0xb1227f59, 0xc4d8f5db, 0x457ac1f1, 0x72953fbc, 0x6d38e895, 0xd894cb72, 0x1bca8650, 0x50408df5, 0x57c24df9, 0xd7dde2bf, 0x806a2ce8, 0 }
			#define PRIVATE_INIT {0xee937ecd, 0xc7e576e0, 0x7dadb5ae, 0xdec080d0, 0x1bcec6ab, 0x39800866, 0xa4161232, 0x746ef459, 0xa7efad39, 0x212a82b1, 0x5085ca9c, 0xa0b1eee8, 0x2497af8c, 0x76f5b008, 0x991c1df1, 0xdd8c6d04, 0x52322987, 0xc1543438, 0xa503ee0a, 0x98234261, 0xdb1251eb, 0x9a15b0f6, 0x1be38a3b, 0x9477871d, 0x35e232d2, 0xebffd800, 0x4e2f07ac, 0x8ff27ced, 0x9a5aafe5, 0x1ab3e7f7, 0x1fb87f65, 0x4295f4d7, 0 }
			#define K0_INIT      {0xae312e52, 0x66e70100, 0xbc5352b1, 0x4d09c7e8, 0x5965f8f1, 0xd4628eb7, 0xf0e16980, 0x2f814600, 0x99265949, 0xac21319c, 0x091fea92, 0xe603d785, 0x7d3c4980, 0xcf476c62, 0x2ca0b1a5, 0xb1d0034a, 0xa36dd8e6, 0x91ba4048, 0x4e8800a8, 0xe3827d55, 0xf0fdd177, 0x6819e7a2, 0x1e597eb0, 0xc37deada, 0x9d71a65d, 0x43fb55a3, 0x3fe02b86, 0x66a51ebf, 0xe38f80de, 0x779ef9cc, 0x8970b188, 0x183ae56d, 0 }
			#define VI_INIT      {0x7ee6762d, 0xa6c5db15, 0xd0769142, 0xb7a284c6, 0x55e90ed2, 0x1e990ef1, 0xfd2194ad, 0x62ddedd0, 0x29121e57, 0xb568c003, 0xdbea3c53, 0x97657399, 0xc7fd6c76, 0x0ab56041, 0x1c76a48d, 0xd93aa785, 0x8c5252d7, 0x2e135d4d, 0x558ef69f, 0x1082f857, 0x7102ed90, 0xb8f0e68a, 0x259c09e8, 0xe7ba71a8, 0x8f5b7a65, 0xd9f6fa7b, 0xcbfba858, 0x7b850189, 0x659558f7, 0x8c21b870, 0x6be019ec, 0x99d825bb, 0 }
			#define VF_INIT      {0xb21e8f7d, 0x4994b43e, 0x76750f22, 0xa44926ab, 0x6e628663, 0xdb32d950, 0x90b363fd, 0x927e3d48, 0x5ef40bc9, 0xc0f1cde7, 0xcf75cf82, 0xf2dcd54b, 0xf65962c5, 0x3fb69a0e, 0xa9696d27, 0x4c3d7f11, 0x92fa05ce, 0x78a9fb31, 0x8210cda7, 0x2acea002, 0x9cffe0ea, 0x6a1d21dd, 0x265f7cc4, 0x445e5ab5, 0xb99569de, 0x1efcbb72, 0xa2d9ed00, 0xcfe656df, 0x8f4c78b6, 0xa4bfeacf, 0x239d3e62, 0x6f226875, 0 }
		#elif VERSION == 1
			#define PUBLIC_INIT  {0x9b8d5d2f, 0xac202494, 0x21d1f159, 0x84e65b8b, 0xa463f3b5, 0xf6cf7b14, 0x5c08a691, 0x770bdd61, 0x4825439c, 0x8a0a38ed, 0xa311fd62, 0x3e704da3, 0x61cb9458, 0x94d30177, 0x178c14f3, 0x8b550ae4, 0x4ca50315, 0xbd1cb050, 0xa991df0b, 0x8a274581, 0xa1850854, 0x5401506b, 0xb9538639, 0x3a535130, 0xa64716a1, 0xd8c8728f, 0x8e322600, 0x2f144abc, 0x9653cbb9, 0x38a889c6, 0x808b4c12, 0x778f547e, 0 }
			#define MODULUS_INIT {0xfac8ea55, 0x5c202590, 0x9b983996, 0x5073983f, 0x9e79615c, 0xe0490ac6, 0x64c69f21, 0x37195cfd, 0xe1e2a5b5, 0x1bcb567b, 0xb083adfc, 0x2a310af2, 0x7ea38e10, 0x39bdd1eb, 0x56bc6076, 0x174b3f6c, 0xa19527ae, 0x1dcdc512, 0x9584b99f, 0x739f4c44, 0x03d7e904, 0x7e538ad3, 0x6de58be2, 0xc74380eb, 0xb0013c30, 0x35ca3ca6, 0x880508f3, 0xba1c5e45, 0x03513d66, 0xffd3592b, 0xb0e138cf, 0xae26793d, 0 }
			#define PRIVATE_INIT {0xf088b6f3, 0x13962921, 0xa27e8931, 0x7bd6a429, 0xe8f0222f, 0xb91909a5, 0x583e9b2f, 0x59b02dd0, 0xd678c142, 0x8c29ca70, 0x1054c3ed, 0x4bd967e8, 0xd072f82f, 0x97a1c47e, 0x7fc28c8e, 0x47c9659e, 0x7c31c6a5, 0x37741d23, 0x1ccc695f, 0xbb26135e, 0x4ac73541, 0x331a4a5b, 0x691cd12e, 0x80e88268, 0xf01d1e69, 0x11dcacff, 0x9eb604d5, 0x59f1fcec, 0x5f2ee3f7, 0x72ef047b, 0x68a7823d, 0xa5874a0e, 0 }
			#define K0_INIT      {0xf9e21673, 0xf03fee9d, 0x41f50781, 0xb8dad47d, 0x531c309c, 0xd1c62a1c, 0xb9531c7c, 0x66df6669, 0xf493224f, 0xf45000f5, 0x9a8b2808, 0x15942fe2, 0xba2a6e64, 0x60ec70c1, 0x1d1637fc, 0x094e72d8, 0x6768ae24, 0x167cc4fc, 0x01e6610a, 0x3b3dce9b, 0x8a674ac4, 0x5755a3a9, 0x374c1d77, 0xd3763646, 0x79cf916f, 0x96acb790, 0x8d5298bf, 0xd35a4eb6, 0x55ba90ae, 0x5b6282cd, 0x272ee575, 0x800d7f0d, 0 }
			#define VI_INIT      {0x78802cdd, 0xcdc5a995, 0x79aba35f, 0xe7b1110d, 0x0a87462f, 0xb26df209, 0xeab79037, 0x10e57c9c, 0x906b89c7, 0x66c1065c, 0xa9a4deb5, 0xb7f60bba, 0x8c2ba39a, 0x2b8b5aa5, 0x4f572c1b, 0x742f2ae2, 0xa38071cf, 0x51a09ceb, 0x3e620971, 0xb2e1c9d7, 0x9028e926, 0x61fd808b, 0x6757218f, 0x59eae68f, 0x9ff831e7, 0x5b1b4db6, 0x296468f0, 0xb139461e, 0x84d473a8, 0x2f716de7, 0x5bd34a75, 0x2315cdc1, 0 }
			#define VF_INIT      {0x30587830, 0xbcc5237a, 0xd6c5d3ef, 0x3c488b04, 0x59f01260, 0x69d336bb, 0xbbae99f4, 0x6a91df34, 0xfea9aab1, 0xc368da3d, 0x2c39fd6c, 0x5d122ee7, 0x9976ea02, 0x043e69fc, 0x614bfa04, 0x9d0ea39b, 0xaf39f13a, 0x9a1f11e5, 0xa1a4edfa, 0x3df51a32, 0xd9da3520, 0xeb7154c4, 0x133e63db, 0x0b6c219a, 0xf708a9b5, 0xe902518e, 0x90add745, 0x1df386d0, 0x06b898f3, 0x26605e84, 0x7f1ed339, 0x435923b7, 0 }
		#endif
	#elif INT_SIZE == 2048
		#if VERSION == 0
			#define PUBLIC_INIT  {0xcf35ac41, 0xab2e7cc1, 0xa1ab2b3a, 0x4a940b65, 0x88f4cf8b, 0x4f3c5398, 0x64452c1e, 0xcb5f3af1, 0xd6fe5140, 0x31c4a26e, 0xb660ec1e, 0xa793e649, 0x712ff6c2, 0xa51df6cf, 0x674dffb4, 0x9a110a8f, 0xd30ba429, 0x0f988341, 0xcbecf597, 0x862b5145, 0x18b40c23, 0xd53bc6cf, 0x9d36bf3b, 0x92a9dd90, 0x860cd1b7, 0xa485c7a9, 0xc826e43f, 0xfd9d683f, 0x0ffffc22, 0xc9392bed, 0xbef892d1, 0xfd0f97b2, 0xc66d820c, 0x95d91816, 0xcd74d658, 0xa0628652, 0x46ef039f, 0xd5b2dafc, 0x4f4d7200, 0x5047b3cb, 0xe872fde9, 0x0f0b2e63, 0xa1c77937, 0x8d93b73f, 0x9c63df00, 0xf0608f93, 0xe14662e7, 0xccd5447d, 0x61d1c787, 0xff0a3ea2, 0x336d3147, 0x222f7da7, 0xb8cbd5a3, 0x252c7934, 0xef111ee0, 0x7da83eb9, 0x4483f225, 0x6e22cfe0, 0xff534efc, 0x9982a41b, 0x8e7dae85, 0xd5432e6b, 0x6fae0798, 0x12f26715, 0 }
			#define MODULUS_INIT {0xa3e57d27, 0x0ca88975, 0x2e7ea760, 0x108a2369, 0x8e013936, 0x8ba746f6, 0x1a55c192, 0xfbba68c6, 0x7735f6ab, 0xa219569e, 0x7d6a29c0, 0x1c1106cb, 0x576b29b8, 0x4e76e1c8, 0xbf8d2d07, 0x37260177, 0xe1c68489, 0xeadb103d, 0xb66b7003, 0xd58f87e8, 0x2c19e1f3, 0x38734514, 0x97ac5084, 0xdccc2572, 0x697d3566, 0xccf81b72, 0xfbb47010, 0xe9757cca, 0x077cc23d, 0x9741b28c, 0xf316f6f7, 0x721d33f8, 0x513d0d0e, 0x300da1b1, 0x1d33c837, 0x446424f0, 0x14098761, 0x47bb2979, 0xe500d694, 0xb5a16528, 0xc6644388, 0x851ce2c6, 0x62526400, 0x4a9bfb7c, 0x6b57ae0a, 0xcfb8b9fd, 0xa96a265a, 0xabc4719c, 0x09589116, 0x644fad1a, 0xd801ae36, 0x55ecf965, 0xd5da60d2, 0x28599e64, 0x733cede8, 0x2caaea5b, 0x977974e6, 0xe96d3dd1, 0x67c49faa, 0x54329bdf, 0x92b6eb32, 0x6094033a, 0xfc788522, 0xad669106, 0 }
			#define PRIVATE_INIT {0xb078c7e1, 0x6651d968, 0xf99d4f95, 0x16515c3f, 0x1846e7be, 0xc106de55, 0x60dc7e63, 0xd2a64c2c, 0xe6e4c8ac, 0x365081aa, 0xa2f9163a, 0xd6938310, 0xa652e195, 0x3a12dc7a, 0x0fde4774, 0xb6a96788, 0xb2b0a05f, 0x53b1a2e6, 0x00eda4e1, 0x4dc8e979, 0x612e20a9, 0x031b82d2, 0x988066d1, 0x658bc86b, 0xd5e8817e, 0x50a9a792, 0x32f236ed, 0x6a888197, 0xbe96a5c4, 0xe05227e4, 0x11c02dd5, 0x0a80b560, 0xe48527dc, 0x21589fa0, 0x2bee1b13, 0x2eeda304, 0x4fe9d078, 0x5588a755, 0xa8dd9ecc, 0xacc17df5, 0x9e8c3e56, 0xc99d7dee, 0xc0be60ab, 0xf7921d66, 0x1acd8054, 0x3e4451bb, 0x5ebb1e69, 0x4ef978ea, 0x25c902a9, 0x3da8fa33, 0x82d5a54c, 0xc0cdee1e, 0xdca4b281, 0xf941330a, 0xbf923e24, 0xc998d166, 0xa7c6e8cd, 0x74d877ee, 0x6b1e6328, 0xc8b7ed52, 0x178f96d3, 0xd12466cf, 0x56f48c54, 0x7a13785f, 0 }
			#define K0_INIT      {0x6b534214, 0x2e23fd27, 0x3fe3ad1f, 0x10d04410, 0x0cd8430c, 0x9b17f446, 0xc5296f20, 0x8997e09e, 0xaedb90a2, 0x32f775ae, 0xe31ca562, 0xc451a0f4, 0x1bf4970a, 0x586849ad, 0x0e3233d2, 0x107e6232, 0x59a8ba42, 0x8e059d71, 0x8e96c3dd, 0x449fdbd9, 0x522263b0, 0xc035635a, 0xffab0647, 0xd932facb, 0xed56a50f, 0xd6726ea7, 0x18ae44ff, 0x9f91da8c, 0x7701486e, 0xd2ee7da6, 0x38ff01dc, 0x3f5cf3ec, 0x124b0987, 0xe28c3af9, 0x913dec92, 0xf114418b, 0xf2f4683a, 0xd6a81974, 0x09440b5c, 0x9f85bdc6, 0x5c83a6ac, 0xcbb50702, 0xb652edbf, 0x8449cd3e, 0x2f5bd8f4, 0x8a7c3c8e, 0xa085599b, 0x28b92b3c, 0xa2998c02, 0x383d745a, 0xecb5ef51, 0x11a7f94f, 0x02cf7c7f, 0x50585ccb, 0x838d3290, 0x712cc18a, 0x8b9432bd, 0xe6cf90b9, 0x6e0d8a9f, 0x878fd75b, 0x05532506, 0xc24a9437, 0x6a3fe3a4, 0x5f35b93a, 0 }
			#define VI_INIT      {0xc0faf374, 0x6f3e2b01, 0x4490a464, 0x8d762b24, 0xc8b5a87c, 0x519066ef, 0xdba86403, 0xed9195a7, 0x0d1f5626, 0x07970fd2, 0x251230cb, 0xb33805b0, 0x5ea2af14, 0xb88ce9bc, 0xe2e84947, 0x32d0690e, 0xfa2f1b60, 0xa3b8ba5a, 0x78f3a4ec, 0xbbb3a3c3, 0x03abf29b, 0xd224a3c0, 0x9aa97a01, 0xac311d46, 0x11fb818e, 0x68f01e6d, 0x5831497b, 0xb638d9e7, 0xf8aac306, 0x369d1801, 0xc03c194c, 0x22aa82d7, 0x3bad4968, 0x1c0316d4, 0x5da35cbd, 0x28ade67e, 0x7c6be2dc, 0x9a6d8d40, 0x973eca42, 0x9a39cf84, 0xd9a9c0a3, 0x468e6d1e, 0xa65c2d9b, 0x3c6068bf, 0xa1a39637, 0xf3155528, 0x51294448, 0x7be3e161, 0xcff9b344, 0x500eb656, 0x853d7a59, 0x7a55a9d5, 0xd5e52184, 0x4800dc25, 0x6a4cae17, 0xe8d4a3a0, 0x4d1ed636, 0x3e743294, 0x8ba0d2e5, 0xdebd61d6, 0x5f7a8caf, 0x56200b09, 0x72fd51c9, 0x92183fb8, 0 }
			#define VF_INIT      {0xdb79bfd9, 0x0a79961b, 0x6c724ceb, 0xeaa99b38, 0x9bdc9380, 0x8b778f24, 0xb33310ba, 0xf7b5496f, 0xa5fb53b4, 0x2a59e5b9, 0x3fbb428f, 0x3228603a, 0x08de78fb, 0x24ecedd7, 0xe52ef4fd, 0xd6558970, 0xca8d8c7a, 0xdaa7dc13, 0xc6c1d39e, 0xa1a2324b, 0xc6f45882, 0xe457144e, 0x3b708285, 0x0a2acddf, 0x4ead1434, 0x9a1f677a, 0x2bddc239, 0x6b914b44, 0x996c3485, 0x060fc907, 0xdf6584a1, 0x1699736e, 0x06f022c5, 0x49867c22, 0x42dc5d18, 0x7a63c5ad, 0x7d27e593, 0xa3e188c8, 0x945effac, 0xf373a301, 0xa92fa69b, 0x4bb803bf, 0x4817429b, 0x16016cdc, 0xca2bb813, 0xb1f158ba, 0xebfeb0a8, 0xeacd2188, 0x9d5aaed6, 0xdb136c6a, 0x704a927a, 0xf6ab450b, 0x7239a241, 0xd55f6e25, 0x00edb8d7, 0x1d63d8a3, 0xf64c01cb, 0x8ab57743, 0xf59c95ac, 0x77e9758d, 0x6a1d4aad, 0xe690401d, 0x2f18505c, 0x2b3348e2, 0 }
		#elif VERSION == 1
			#define PUBLIC_INIT  {0x0649fcd3, 0xde960bc6, 0xa21fb85b, 0x2e66d3a9, 0x28bd981e, 0xf2a767a6, 0x7166fc4c, 0xa3139242, 0x38e06a21, 0x207aa987, 0xdbb407f2, 0xe3edeaef, 0xbb9a6569, 0x8a6667c8, 0x1c09ade7, 0xba48c95b, 0x208aaedb, 0xd3ad1dd4, 0xb87410c0, 0x6941a0be, 0xcb621e1a, 0xa5b2ba74, 0x8aaae7bc, 0x58a0af85, 0xcd1011cf, 0xdef85efe, 0x22ab02e3, 0xa6e4c827, 0x0a5810ef, 0x8cfb18e7, 0x4b7b0147, 0x26eed585, 0x51444add, 0x2202b4cd, 0xc56ef8b6, 0xb895334e, 0xa016d756, 0xf0aa8bd0, 0xa688c88a, 0x73d784b0, 0x7aa7c7ec, 0x5609ee81, 0x9b61a026, 0x94b94592, 0xa2b0d1fe, 0x7a93f837, 0xa150a995, 0x540616e3, 0xdf13f1e9, 0x25a4954a, 0x110adbd0, 0xa735830b, 0x7950a62b, 0x7a5d8744, 0x02de5de4, 0xbb00519c, 0x88fec235, 0x77b435c8, 0x63ecc49c, 0x20103df3, 0x72402e2c, 0x74c00378, 0xe9dd7d68, 0x015d3168, 0 }
			#define MODULUS_INIT {0x838a885d, 0x82271f23, 0x5766ed99, 0xc82c9436, 0xe63a6fa9, 0xd7e2d325, 0xf890fd2b, 0x52504a60, 0x00a1fdab, 0x17ac49d9, 0x789d81c8, 0x7acc4bb1, 0xecb8f462, 0xa2a19539, 0x436cd639, 0x6899c19a, 0x8a1e97a3, 0xffb235d7, 0x853f640c, 0x075df1ef, 0x9b6d7535, 0x1acd6fa3, 0x8839ba86, 0xe3c93023, 0xb316eb45, 0xe63c7bb3, 0x498debf1, 0xcf05ec4f, 0x49dd20d9, 0x0fb09dde, 0x4973b61f, 0x3e07c08a, 0xf8386167, 0xe9022f62, 0xe7f2fa16, 0x2cde78de, 0xd278d2dd, 0x7c8ce8ea, 0xcbcb39fa, 0x4b2cc0c9, 0x36f14d23, 0xd7562a67, 0xee3d7f9c, 0x849e256e, 0x9ea475ea, 0x7d76742e, 0x4e98c665, 0xc38922cb, 0x0bd4ddd7, 0x04b848a0, 0x1174fe2c, 0x1f550b6e, 0xb178385a, 0x13f8707c, 0x888b4d82, 0xeae77c20, 0xa8abde34, 0x8935030b, 0x124fcbf7, 0x1a7dcac8, 0xee098885, 0x15c83e6e, 0x2355b6e0, 0xc1390f38, 0 }
			#define PRIVATE_INIT {0x0a63025b, 0x7510712a, 0x4c2ef6b9, 0x15ab6767, 0x0e28aeee, 0x7dbf1dea, 0x8880d91f, 0x4d672ea9, 0x81162641, 0x54598f3d, 0x49ec06c1, 0x5c5258af, 0x79492897, 0xde55b51e, 0xc9c8453c, 0x8790f7db, 0xd974106f, 0x35b4e6ed, 0xcf8a42e8, 0x9425eddf, 0xe341f31a, 0xc8036af7, 0x5e238992, 0xabaf8412, 0x0b29adf5, 0x0f983b1d, 0x142f42d6, 0x9b1ac32f, 0x5893678b, 0xeb6ee734, 0xaa42ec80, 0x60941d11, 0x31868fe7, 0x439fb1db, 0xcba348e5, 0xbb9704f5, 0xde232326, 0x0245d4b6, 0x5bc0abec, 0xde9ae410, 0x305bc0a3, 0xc91faa9e, 0x530a6015, 0x24739f44, 0x94770b3d, 0x6cbbf1a5, 0xaf757080, 0xce689b43, 0xe8b2cdfe, 0xd0944dff, 0xf207ff0f, 0x35c53241, 0x157fbb49, 0x3c928382, 0x4fcaff33, 0xdd378f6a, 0xe84dec7c, 0xc6eafb54, 0x2124712f, 0x2cf8bc23, 0x2031859a, 0x50819972, 0xbad8a50f, 0x9f4fa78e, 0 }
			#define K0_INIT      {0xe9b2e3da, 0x1dee56df, 0x5836c6c6, 0x0a150f89, 0x8c3c8667, 0x42f47ac9, 0xb75bdc1a, 0x5d3258e2, 0x7123eecf, 0x5b3eb179, 0xc213521d, 0x7567d96c, 0x195f672c, 0xf8aca78f, 0x2b188c84, 0xecc3bb1e, 0xd808cf2c, 0x6e701793, 0x248e8a8b, 0x430659b1, 0x989c12c3, 0x343820e9, 0xa8b25107, 0x6bb2f26a, 0xda0cf7f9, 0xcc06e029, 0x7cd6baeb, 0xb98d80ab, 0xc42dd205, 0x6592ede0, 0xf16ff7fb, 0x295bc6b1, 0xe448613a, 0xa5a3251e, 0x93db5530, 0xf3344d2b, 0xef59dc5a, 0xe105469c, 0x8acea13e, 0x4dbe9a8e, 0x33dcecf2, 0x248abe03, 0xd8032b8a, 0x9bc72092, 0xffaadfc0, 0x6f6aac8b, 0x749f6aec, 0x9b2106ff, 0x39b53e28, 0x2bb16ea4, 0x39eb671c, 0xd006d4b7, 0xac60d346, 0xecdfc2a0, 0x3684bdaa, 0xd98e48d1, 0x4b0918cc, 0x7022ba1c, 0xaecfb1bb, 0xa34fa9c5, 0x33a84fd5, 0x1f83eeab, 0xca2644cb, 0xa762c8e7, 0 }
			#define VI_INIT      {0x26c5f89d, 0x76f26d66, 0x5daa8c50, 0xd569201c, 0x83cdf0cd, 0x10d2de3f, 0x2088c35e, 0x553429d6, 0x89333f6f, 0xe4f86e94, 0xe384565a, 0x65570cab, 0x593cd98b, 0x431be002, 0x325e6e8b, 0xd494b131, 0x1912681f, 0x6f6ebcd6, 0x44640166, 0x9f004172, 0x29a4c965, 0x208d812f, 0xb05a107e, 0xb8af5bb4, 0xaa7d066f, 0xb8fb7865, 0x3b8e7955, 0x2c460c20, 0x26b48b42, 0x0536c375, 0xe9dd15ca, 0x49e0dfa8, 0x7ae452ad, 0x93663e25, 0x648b3f99, 0xae13cd9d, 0xe5cb052c, 0xbde3beea, 0xf3424785, 0xb392f730, 0x1801bfe8, 0xb8b89b6a, 0xb094f909, 0x66392d33, 0x45688e0b, 0x70ad09fc, 0xd6008c6b, 0x1a9dfdd4, 0x4e4cbc54, 0x463bb279, 0x45b66112, 0xd85afdaf, 0xb0a95468, 0xbe2e76fc, 0xb3d4d052, 0x2559044b, 0xa5b41d26, 0xb446512a, 0x751312ee, 0x449c7c99, 0xe1c9bb9b, 0x9ab3b77a, 0x595d0ee6, 0x09fbb69e, 0 }
			#define VF_INIT      {0x2265ce5c, 0x7e5575da, 0x20d46b0a, 0x3c0936cf, 0x9d634fb3, 0xb9012107, 0xc3154c7a, 0x089847b7, 0x6b747800, 0x19ef4be7, 0xf3c3e0b3, 0xca8f8360, 0x51129373, 0xffa653ea, 0x03c8fc1d, 0x1185fdaa, 0xeb21eabe, 0xf92cd7fa, 0xfb0acb45, 0x5c0ef33f, 0xe8257a28, 0x73acad8f, 0x32cfe986, 0xafb959e8, 0x1f7461d6, 0xdcb983e3, 0xaa5efc28, 0xc0e577f2, 0x41e7809c, 0xf2f5a006, 0x0d3b421c, 0x26bc5d73, 0x31d0bcf1, 0xb57f5e2f, 0xf4861aa2, 0x9166e20f, 0x082b379b, 0xe9eef393, 0xe2f0d321, 0x8c271208, 0x31925848, 0x3e3369f0, 0xc87a864b, 0x3814c2a6, 0x0ebee736, 0xf8b9bb81, 0xfa2f9ebf, 0x26c573f0, 0x5cc8b056, 0xe7a61c45, 0x0438309b, 0x801d8a49, 0x7b2ad409, 0xaefe2bc2, 0x6a779a73, 0x76a717ee, 0x29a30bc1, 0xaf763800, 0xe51ad8e8, 0xd8392c47, 0xf2cbcae0, 0xb2aad95d, 0x8ddc4f96, 0x297b984d, 0 }
		#endif
	#endif
#elif VAR_SIZE == 64
	#if INT_SIZE == 128
		#if VERSION == 0
			#define PUBLIC_INIT  {0x0000000000010001, 0x0000000000000000, 0 }
			#define MODULUS_INIT {0xaf122700611e915d, 0xc26e8d2105e3454b, 0 }
			#define PRIVATE_INIT {0xb5d6200be2ced7d5, 0x0745812bb1ffacf0, 0 }
			#define K0_INIT      {0x6ec8719a1b11ba4f, 0x8354f24c98cfac7a, 0 }
			#define VI_INIT      {0x2d8c132e4179d9f8, 0x02bbe7e3a87bff65, 0 }
			#define VF_INIT      {0x97729a00e4aa88f4, 0x987641e5532d7be1, 0 }
		#elif VERSION == 1
			#define PUBLIC_INIT  {0x0000000000010001, 0x0000000000000000, 0 }
			#define MODULUS_INIT {0xe525a5c4981737a1, 0x5f4c6991b0042610, 0 }
			#define PRIVATE_INIT {0xc42fbc87ef853e09, 0x4c0929ca2608895d, 0 }
			#define K0_INIT      {0x9284de3f6da92934, 0x0424eafd3cea5241, 0 }
			#define VI_INIT      {0xc4483cedd4e61f56, 0xd468e2d8525f955b, 0 }
			#define VF_INIT      {0x9ffc04bb18c3827b, 0x43b1f794e05c0ffc, 0 }
		#elif VERSION == 2
			#define PUBLIC_INIT  {0x0000000000010001, 0x0000000000000000, 0 }
			#define MODULUS_INIT {0x638add6c6fc04a59, 0xc8aed04da6c85dd4, 0 }
			#define PRIVATE_INIT {0x56ef00ff86e63f81, 0x2845ecc7a890cd43, 0 }
			#define K0_INIT      {0x7c099ce764ab8335, 0x64d8149d5c75b713, 0 }
			#define VI_INIT      {0x4579930126d6b13a, 0x568a66045aed97fb, 0 }
			#define VF_INIT      {0x1393086283886aa0, 0x5b250b299576704a, 0 }
		#endif
	#elif INT_SIZE == 256
		#if VERSION == 0
			#define PUBLIC_INIT  {0xae3e61b598558527, 0x0acd8d8c0618fe72, 0x7a96a03f3606dffc, 0x171f87ecffdafedd, 0 }
			#define MODULUS_INIT {0xd9a60b5113eeb33b, 0xa95a284a336cfe29, 0xb1314c5a1ac92506, 0x8ae8fe509879989b, 0 }
			#define PRIVATE_INIT {0x57bef4e85ae8f2b7, 0x149c23bd63746e99, 0x705cac6d27a4d839, 0x1d8232d4f22da2e0, 0 }
			#define K0_INIT      {0x7f35a915e3ed6b07, 0xfb28e4c04f74695f, 0x94860bac38ca8ed7, 0x2792adec387c47a6, 0 }
			#define VI_INIT      {0xb062608c00fea35e, 0xecefb47a221611d2, 0xc213747af219bfa1, 0x235f21e02121b0b0, 0 }
			#define VF_INIT      {0x4bd7cfe70c235676, 0x25730c97bccce076, 0x24ba2de5c5dc76bc, 0x6e0583f11e8212e1, 0 }
		#elif VERSION == 1
			#define PUBLIC_INIT  {0x03a4714daeee3251, 0xa469381ee8b285b7, 0xedb5d53aa695054f, 0x7821e76988333ca6, 0 }
			#define MODULUS_INIT {0x724ae2dd4b7e8663, 0x0254b33822c4d131, 0x2745b26d7f83ffa0, 0xbde5d7cd907ff14d, 0 }
			#define PRIVATE_INIT {0xf114e510d9e166a1, 0x320565f3b79aa947, 0x124e3763a04b39e7, 0x34350b132f9ec752, 0 }
			#define K0_INIT      {0xd7da960946958aae, 0x66cbd8bac0a6a828, 0x8a925b9bf69c0f7e, 0x87f71b22bb897d38, 0 }
			#define VI_INIT      {0x0df494026ab91dd8, 0x42c9ec541f2c8b32, 0x68b85dd87f3841fd, 0x8eb0489cf77c63e9, 0 }
			#define VF_INIT      {0xebef6a344dc73556, 0x9ba12cff205de819, 0x537d74da0215dfe8, 0x4d53ecb66bed7b3d, 0 }
		#endif
	#elif INT_SIZE == 512
		#if VERSION == 0
			#define PUBLIC_INIT  {0xad7caad8c959b781, 0x58afeb2607789b18, 0x78b636d585475334, 0x6fc597b682b7ccf6, 0x624c7ac94871526b, 0x267189bb59bec3b2, 0xf0e0ac0b296a6006, 0xb65efa9be7541a10, 0 }
			#define MODULUS_INIT {0x93b1a7c43e1acc3d, 0x4cbc2d45ee006472, 0x916cab52ea3a88f0, 0x5c84712bca9f0880, 0x9d88ed0c73bba1b0, 0x2b3be9c7def10426, 0xf346ac3c065d1132, 0xf16ea639730a5881, 0 }
			#define PRIVATE_INIT {0xd18724cb8e505ef1, 0x9709e4aff18f0c6e, 0x872f02990ced7ef5, 0x814ea45a531a7afa, 0xf79b3e974c5ef1d5, 0xeeee2c1ee520e88a, 0x589eef5d6ddaf173, 0x05ffea52c644ee4e, 0 }
			#define K0_INIT      {0x4ca499fd3e6e6cea, 0x1f90c86e3ffb3baa, 0x5cf4aa1626ee023a, 0xc3ff9aee5272bb77, 0xccd10bb12c62f57c, 0x782d4a53c9e811b6, 0xac60adf43f295163, 0x3160493be94f6b0d, 0 }
			#define VI_INIT      {0x566c8ea000b0646b, 0x6aaf4e1dff70c90c, 0x827b22b2a4eb8ccb, 0x039f613c319e8ae4, 0xaadd6f1b8fb5abf1, 0x029da3ecea8005b2, 0xd5e496f69ea4b6be, 0x278008a8fc5a34b8, 0 }
			#define VF_INIT      {0xbff50594cad47bab, 0x7a0ae537582a1681, 0x80c9729933374f78, 0x4cd0ae4904bdebdb, 0xc2ebf5cc70638d6d, 0x827164bb86e01037, 0xac6f73b5fb8f775e, 0x08a289282412fdb0, 0 }
		#elif VERSION == 1
			#define PUBLIC_INIT  {0x5ffd04aa855a0171, 0x12b7268ac5a09b78, 0x93f38ca398f34bba, 0xb2ddc4df6fe2dfba, 0xfec59b4395e5af21, 0xd08ae1811a676347, 0xbc54209287d871df, 0x1e907e1781857506, 0 }
			#define MODULUS_INIT {0xc3295f2fdc6204f1, 0x5e44e43e4b2dd74a, 0xf993c383092d510a, 0xe10f8eeccd0d962b, 0xf3b05bb2e1985e8d, 0x1a297500e9b06ad3, 0x5171980681d05dd8, 0xb8db0a56ef03b60c, 0 }
			#define PRIVATE_INIT {0xf3a977d1ec5c5cd1, 0x227dd94b837fe64c, 0x7cb8f5df1a33d1c7, 0x693fa9b206eb139a, 0xf21661ff48f558f0, 0x3792f691026d0dc2, 0x8de29403596a33b5, 0x191858e17018a85a, 0 }
			#define K0_INIT      {0x114468e4f381389b, 0x63e8b38c8a711239, 0x1d123887bdefa2cf, 0x5d51e52f2528bb9f, 0xafb1a94df9eb5ca3, 0x97aa79e7ad72bc61, 0xf171d7925d216d40, 0x30bed69e48d03d9e, 0 }
			#define VI_INIT      {0xba139a0ade2a5c25, 0x97f6ab1107cfbbf1, 0x054dc292d255a139, 0x4fbed86f9e39e329, 0x7c4193688a5141f2, 0x9d70bb1f99fee985, 0x667039ef709f9bb9, 0x6af4aab7b0cec2b3, 0 }
			#define VF_INIT      {0x3dab59a933080ae0, 0x6edc8e45e349f5e0, 0x8e7b6fa46d302b85, 0x99dd11287ec72712, 0x3168f15167b03755, 0xde140d0f79942c45, 0xc7eb56832f03d52e, 0x4da285f1e876f90b, 0 }
		#endif
	#elif INT_SIZE == 1024
		#if VERSION == 0
			#define PUBLIC_INIT  {0xd9cbab3a5b05077d, 0x7eb72b10cbd65c70, 0xb7e2c3b4a2f738e4, 0x82ac85460aa84c48, 0xb09b19907123875c, 0xe3b1bb4d6a5feec1, 0x26a210e5228d1e11, 0xf6e86a7dcae48217, 0x31760338fc543694, 0x1f508794cf880699, 0xd67819a622621015, 0xd95936b5132851b0, 0x7676e8fc5fada6bf, 0xb3c7750c68932c00, 0x424b0cfaa82cba98, 0x9cd409338b62fed2, 0 }
			#define MODULUS_INIT {0xe64b65291ff6030f, 0x5e9b1da1b306abc9, 0xf78b4f6be1d613b8, 0x22aa623246e07a71, 0xc63604cad3b417ac, 0xe92e3fd988dab1e7, 0x05a642013f6d0e60, 0xf4d78086c275dab1, 0x78947e53190e41fd, 0x2408092240b38f8b, 0xb1227f59ef2742ed, 0x457ac1f1c4d8f5db, 0x6d38e89572953fbc, 0x1bca8650d894cb72, 0x57c24df950408df5, 0x806a2ce8d7dde2bf, 0 }
			#define PRIVATE_INIT {0xc7e576e0ee937ecd, 0xdec080d07dadb5ae, 0x398008661bcec6ab, 0x746ef459a4161232, 0x212a82b1a7efad39, 0xa0b1eee85085ca9c, 0x76f5b0082497af8c, 0xdd8c6d04991c1df1, 0xc154343852322987, 0x98234261a503ee0a, 0x9a15b0f6db1251eb, 0x9477871d1be38a3b, 0xebffd80035e232d2, 0x8ff27ced4e2f07ac, 0x1ab3e7f79a5aafe5, 0x4295f4d71fb87f65, 0 }
			#define K0_INIT      {0x66e70100ae312e52, 0x4d09c7e8bc5352b1, 0xd4628eb75965f8f1, 0x2f814600f0e16980, 0xac21319c99265949, 0xe603d785091fea92, 0xcf476c627d3c4980, 0xb1d0034a2ca0b1a5, 0x91ba4048a36dd8e6, 0xe3827d554e8800a8, 0x6819e7a2f0fdd177, 0xc37deada1e597eb0, 0x43fb55a39d71a65d, 0x66a51ebf3fe02b86, 0x779ef9cce38f80de, 0x183ae56d8970b188, 0 }
			#define VI_INIT      {0xa6c5db157ee6762d, 0xb7a284c6d0769142, 0x1e990ef155e90ed2, 0x62ddedd0fd2194ad, 0xb568c00329121e57, 0x97657399dbea3c53, 0x0ab56041c7fd6c76, 0xd93aa7851c76a48d, 0x2e135d4d8c5252d7, 0x1082f857558ef69f, 0xb8f0e68a7102ed90, 0xe7ba71a8259c09e8, 0xd9f6fa7b8f5b7a65, 0x7b850189cbfba858, 0x8c21b870659558f7, 0x99d825bb6be019ec, 0 }
			#define VF_INIT      {0x4994b43eb21e8f7d, 0xa44926ab76750f22, 0xdb32d9506e628663, 0x927e3d4890b363fd, 0xc0f1cde75ef40bc9, 0xf2dcd54bcf75cf82, 0x3fb69a0ef65962c5, 0x4c3d7f11a9696d27, 0x78a9fb3192fa05ce, 0x2acea0028210cda7, 0x6a1d21dd9cffe0ea, 0x445e5ab5265f7cc4, 0x1efcbb72b99569de, 0xcfe656dfa2d9ed00, 0xa4bfeacf8f4c78b6, 0x6f226875239d3e62, 0 }
		#elif VERSION == 1
			#define PUBLIC_INIT  {0xac2024949b8d5d2f, 0x84e65b8b21d1f159, 0xf6cf7b14a463f3b5, 0x770bdd615c08a691, 0x8a0a38ed4825439c, 0x3e704da3a311fd62, 0x94d3017761cb9458, 0x8b550ae4178c14f3, 0xbd1cb0504ca50315, 0x8a274581a991df0b, 0x5401506ba1850854, 0x3a535130b9538639, 0xd8c8728fa64716a1, 0x2f144abc8e322600, 0x38a889c69653cbb9, 0x778f547e808b4c12, 0 }
			#define MODULUS_INIT {0x5c202590fac8ea55, 0x5073983f9b983996, 0xe0490ac69e79615c, 0x37195cfd64c69f21, 0x1bcb567be1e2a5b5, 0x2a310af2b083adfc, 0x39bdd1eb7ea38e10, 0x174b3f6c56bc6076, 0x1dcdc512a19527ae, 0x739f4c449584b99f, 0x7e538ad303d7e904, 0xc74380eb6de58be2, 0x35ca3ca6b0013c30, 0xba1c5e45880508f3, 0xffd3592b03513d66, 0xae26793db0e138cf, 0 }
			#define PRIVATE_INIT {0x13962921f088b6f3, 0x7bd6a429a27e8931, 0xb91909a5e8f0222f, 0x59b02dd0583e9b2f, 0x8c29ca70d678c142, 0x4bd967e81054c3ed, 0x97a1c47ed072f82f, 0x47c9659e7fc28c8e, 0x37741d237c31c6a5, 0xbb26135e1ccc695f, 0x331a4a5b4ac73541, 0x80e88268691cd12e, 0x11dcacfff01d1e69, 0x59f1fcec9eb604d5, 0x72ef047b5f2ee3f7, 0xa5874a0e68a7823d, 0 }
			#define K0_INIT      {0xf03fee9df9e21673, 0xb8dad47d41f50781, 0xd1c62a1c531c309c, 0x66df6669b9531c7c, 0xf45000f5f493224f, 0x15942fe29a8b2808, 0x60ec70c1ba2a6e64, 0x094e72d81d1637fc, 0x167cc4fc6768ae24, 0x3b3dce9b01e6610a, 0x5755a3a98a674ac4, 0xd3763646374c1d77, 0x96acb79079cf916f, 0xd35a4eb68d5298bf, 0x5b6282cd55ba90ae, 0x800d7f0d272ee575, 0 }
			#define VI_INIT      {0xcdc5a99578802cdd, 0xe7b1110d79aba35f, 0xb26df2090a87462f, 0x10e57c9ceab79037, 0x66c1065c906b89c7, 0xb7f60bbaa9a4deb5, 0x2b8b5aa58c2ba39a, 0x742f2ae24f572c1b, 0x51a09ceba38071cf, 0xb2e1c9d73e620971, 0x61fd808b9028e926, 0x59eae68f6757218f, 0x5b1b4db69ff831e7, 0xb139461e296468f0, 0x2f716de784d473a8, 0x2315cdc15bd34a75, 0 }
			#define VF_INIT      {0xbcc5237a30587830, 0x3c488b04d6c5d3ef, 0x69d336bb59f01260, 0x6a91df34bbae99f4, 0xc368da3dfea9aab1, 0x5d122ee72c39fd6c, 0x043e69fc9976ea02, 0x9d0ea39b614bfa04, 0x9a1f11e5af39f13a, 0x3df51a32a1a4edfa, 0xeb7154c4d9da3520, 0x0b6c219a133e63db, 0xe902518ef708a9b5, 0x1df386d090add745, 0x26605e8406b898f3, 0x435923b77f1ed339, 0 }
		#endif
	#elif INT_SIZE == 2048
		#if VERSION == 0
			#define PUBLIC_INIT  {0xab2e7cc1cf35ac41, 0x4a940b65a1ab2b3a, 0x4f3c539888f4cf8b, 0xcb5f3af164452c1e, 0x31c4a26ed6fe5140, 0xa793e649b660ec1e, 0xa51df6cf712ff6c2, 0x9a110a8f674dffb4, 0x0f988341d30ba429, 0x862b5145cbecf597, 0xd53bc6cf18b40c23, 0x92a9dd909d36bf3b, 0xa485c7a9860cd1b7, 0xfd9d683fc826e43f, 0xc9392bed0ffffc22, 0xfd0f97b2bef892d1, 0x95d91816c66d820c, 0xa0628652cd74d658, 0xd5b2dafc46ef039f, 0x5047b3cb4f4d7200, 0x0f0b2e63e872fde9, 0x8d93b73fa1c77937, 0xf0608f939c63df00, 0xccd5447de14662e7, 0xff0a3ea261d1c787, 0x222f7da7336d3147, 0x252c7934b8cbd5a3, 0x7da83eb9ef111ee0, 0x6e22cfe04483f225, 0x9982a41bff534efc, 0xd5432e6b8e7dae85, 0x12f267156fae0798, 0 }
			#define MODULUS_INIT {0x0ca88975a3e57d27, 0x108a23692e7ea760, 0x8ba746f68e013936, 0xfbba68c61a55c192, 0xa219569e7735f6ab, 0x1c1106cb7d6a29c0, 0x4e76e1c8576b29b8, 0x37260177bf8d2d07, 0xeadb103de1c68489, 0xd58f87e8b66b7003, 0x387345142c19e1f3, 0xdccc257297ac5084, 0xccf81b72697d3566, 0xe9757ccafbb47010, 0x9741b28c077cc23d, 0x721d33f8f316f6f7, 0x300da1b1513d0d0e, 0x446424f01d33c837, 0x47bb297914098761, 0xb5a16528e500d694, 0x851ce2c6c6644388, 0x4a9bfb7c62526400, 0xcfb8b9fd6b57ae0a, 0xabc4719ca96a265a, 0x644fad1a09589116, 0x55ecf965d801ae36, 0x28599e64d5da60d2, 0x2caaea5b733cede8, 0xe96d3dd1977974e6, 0x54329bdf67c49faa, 0x6094033a92b6eb32, 0xad669106fc788522, 0 }
			#define PRIVATE_INIT {0x6651d968b078c7e1, 0x16515c3ff99d4f95, 0xc106de551846e7be, 0xd2a64c2c60dc7e63, 0x365081aae6e4c8ac, 0xd6938310a2f9163a, 0x3a12dc7aa652e195, 0xb6a967880fde4774, 0x53b1a2e6b2b0a05f, 0x4dc8e97900eda4e1, 0x031b82d2612e20a9, 0x658bc86b988066d1, 0x50a9a792d5e8817e, 0x6a88819732f236ed, 0xe05227e4be96a5c4, 0x0a80b56011c02dd5, 0x21589fa0e48527dc, 0x2eeda3042bee1b13, 0x5588a7554fe9d078, 0xacc17df5a8dd9ecc, 0xc99d7dee9e8c3e56, 0xf7921d66c0be60ab, 0x3e4451bb1acd8054, 0x4ef978ea5ebb1e69, 0x3da8fa3325c902a9, 0xc0cdee1e82d5a54c, 0xf941330adca4b281, 0xc998d166bf923e24, 0x74d877eea7c6e8cd, 0xc8b7ed526b1e6328, 0xd12466cf178f96d3, 0x7a13785f56f48c54, 0 }
			#define K0_INIT      {0x2e23fd276b534214, 0x10d044103fe3ad1f, 0x9b17f4460cd8430c, 0x8997e09ec5296f20, 0x32f775aeaedb90a2, 0xc451a0f4e31ca562, 0x586849ad1bf4970a, 0x107e62320e3233d2, 0x8e059d7159a8ba42, 0x449fdbd98e96c3dd, 0xc035635a522263b0, 0xd932facbffab0647, 0xd6726ea7ed56a50f, 0x9f91da8c18ae44ff, 0xd2ee7da67701486e, 0x3f5cf3ec38ff01dc, 0xe28c3af9124b0987, 0xf114418b913dec92, 0xd6a81974f2f4683a, 0x9f85bdc609440b5c, 0xcbb507025c83a6ac, 0x8449cd3eb652edbf, 0x8a7c3c8e2f5bd8f4, 0x28b92b3ca085599b, 0x383d745aa2998c02, 0x11a7f94fecb5ef51, 0x50585ccb02cf7c7f, 0x712cc18a838d3290, 0xe6cf90b98b9432bd, 0x878fd75b6e0d8a9f, 0xc24a943705532506, 0x5f35b93a6a3fe3a4, 0 }
			#define VI_INIT      {0x6f3e2b01c0faf374, 0x8d762b244490a464, 0x519066efc8b5a87c, 0xed9195a7dba86403, 0x07970fd20d1f5626, 0xb33805b0251230cb, 0xb88ce9bc5ea2af14, 0x32d0690ee2e84947, 0xa3b8ba5afa2f1b60, 0xbbb3a3c378f3a4ec, 0xd224a3c003abf29b, 0xac311d469aa97a01, 0x68f01e6d11fb818e, 0xb638d9e75831497b, 0x369d1801f8aac306, 0x22aa82d7c03c194c, 0x1c0316d43bad4968, 0x28ade67e5da35cbd, 0x9a6d8d407c6be2dc, 0x9a39cf84973eca42, 0x468e6d1ed9a9c0a3, 0x3c6068bfa65c2d9b, 0xf3155528a1a39637, 0x7be3e16151294448, 0x500eb656cff9b344, 0x7a55a9d5853d7a59, 0x4800dc25d5e52184, 0xe8d4a3a06a4cae17, 0x3e7432944d1ed636, 0xdebd61d68ba0d2e5, 0x56200b095f7a8caf, 0x92183fb872fd51c9, 0 }
			#define VF_INIT      {0x0a79961bdb79bfd9, 0xeaa99b386c724ceb, 0x8b778f249bdc9380, 0xf7b5496fb33310ba, 0x2a59e5b9a5fb53b4, 0x3228603a3fbb428f, 0x24ecedd708de78fb, 0xd6558970e52ef4fd, 0xdaa7dc13ca8d8c7a, 0xa1a2324bc6c1d39e, 0xe457144ec6f45882, 0x0a2acddf3b708285, 0x9a1f677a4ead1434, 0x6b914b442bddc239, 0x060fc907996c3485, 0x1699736edf6584a1, 0x49867c2206f022c5, 0x7a63c5ad42dc5d18, 0xa3e188c87d27e593, 0xf373a301945effac, 0x4bb803bfa92fa69b, 0x16016cdc4817429b, 0xb1f158baca2bb813, 0xeacd2188ebfeb0a8, 0xdb136c6a9d5aaed6, 0xf6ab450b704a927a, 0xd55f6e257239a241, 0x1d63d8a300edb8d7, 0x8ab57743f64c01cb, 0x77e9758df59c95ac, 0xe690401d6a1d4aad, 0x2b3348e22f18505c, 0 }
		#elif VERSION == 1
			#define PUBLIC_INIT  {0xde960bc60649fcd3, 0x2e66d3a9a21fb85b, 0xf2a767a628bd981e, 0xa31392427166fc4c, 0x207aa98738e06a21, 0xe3edeaefdbb407f2, 0x8a6667c8bb9a6569, 0xba48c95b1c09ade7, 0xd3ad1dd4208aaedb, 0x6941a0beb87410c0, 0xa5b2ba74cb621e1a, 0x58a0af858aaae7bc, 0xdef85efecd1011cf, 0xa6e4c82722ab02e3, 0x8cfb18e70a5810ef, 0x26eed5854b7b0147, 0x2202b4cd51444add, 0xb895334ec56ef8b6, 0xf0aa8bd0a016d756, 0x73d784b0a688c88a, 0x5609ee817aa7c7ec, 0x94b945929b61a026, 0x7a93f837a2b0d1fe, 0x540616e3a150a995, 0x25a4954adf13f1e9, 0xa735830b110adbd0, 0x7a5d87447950a62b, 0xbb00519c02de5de4, 0x77b435c888fec235, 0x20103df363ecc49c, 0x74c0037872402e2c, 0x015d3168e9dd7d68, 0 }
			#define MODULUS_INIT {0x82271f23838a885d, 0xc82c94365766ed99, 0xd7e2d325e63a6fa9, 0x52504a60f890fd2b, 0x17ac49d900a1fdab, 0x7acc4bb1789d81c8, 0xa2a19539ecb8f462, 0x6899c19a436cd639, 0xffb235d78a1e97a3, 0x075df1ef853f640c, 0x1acd6fa39b6d7535, 0xe3c930238839ba86, 0xe63c7bb3b316eb45, 0xcf05ec4f498debf1, 0x0fb09dde49dd20d9, 0x3e07c08a4973b61f, 0xe9022f62f8386167, 0x2cde78dee7f2fa16, 0x7c8ce8ead278d2dd, 0x4b2cc0c9cbcb39fa, 0xd7562a6736f14d23, 0x849e256eee3d7f9c, 0x7d76742e9ea475ea, 0xc38922cb4e98c665, 0x04b848a00bd4ddd7, 0x1f550b6e1174fe2c, 0x13f8707cb178385a, 0xeae77c20888b4d82, 0x8935030ba8abde34, 0x1a7dcac8124fcbf7, 0x15c83e6eee098885, 0xc1390f382355b6e0, 0 }
			#define PRIVATE_INIT {0x7510712a0a63025b, 0x15ab67674c2ef6b9, 0x7dbf1dea0e28aeee, 0x4d672ea98880d91f, 0x54598f3d81162641, 0x5c5258af49ec06c1, 0xde55b51e79492897, 0x8790f7dbc9c8453c, 0x35b4e6edd974106f, 0x9425eddfcf8a42e8, 0xc8036af7e341f31a, 0xabaf84125e238992, 0x0f983b1d0b29adf5, 0x9b1ac32f142f42d6, 0xeb6ee7345893678b, 0x60941d11aa42ec80, 0x439fb1db31868fe7, 0xbb9704f5cba348e5, 0x0245d4b6de232326, 0xde9ae4105bc0abec, 0xc91faa9e305bc0a3, 0x24739f44530a6015, 0x6cbbf1a594770b3d, 0xce689b43af757080, 0xd0944dffe8b2cdfe, 0x35c53241f207ff0f, 0x3c928382157fbb49, 0xdd378f6a4fcaff33, 0xc6eafb54e84dec7c, 0x2cf8bc232124712f, 0x508199722031859a, 0x9f4fa78ebad8a50f, 0 }
			#define K0_INIT      {0x1dee56dfe9b2e3da, 0x0a150f895836c6c6, 0x42f47ac98c3c8667, 0x5d3258e2b75bdc1a, 0x5b3eb1797123eecf, 0x7567d96cc213521d, 0xf8aca78f195f672c, 0xecc3bb1e2b188c84, 0x6e701793d808cf2c, 0x430659b1248e8a8b, 0x343820e9989c12c3, 0x6bb2f26aa8b25107, 0xcc06e029da0cf7f9, 0xb98d80ab7cd6baeb, 0x6592ede0c42dd205, 0x295bc6b1f16ff7fb, 0xa5a3251ee448613a, 0xf3344d2b93db5530, 0xe105469cef59dc5a, 0x4dbe9a8e8acea13e, 0x248abe0333dcecf2, 0x9bc72092d8032b8a, 0x6f6aac8bffaadfc0, 0x9b2106ff749f6aec, 0x2bb16ea439b53e28, 0xd006d4b739eb671c, 0xecdfc2a0ac60d346, 0xd98e48d13684bdaa, 0x7022ba1c4b0918cc, 0xa34fa9c5aecfb1bb, 0x1f83eeab33a84fd5, 0xa762c8e7ca2644cb, 0 }
			#define VI_INIT      {0x76f26d6626c5f89d, 0xd569201c5daa8c50, 0x10d2de3f83cdf0cd, 0x553429d62088c35e, 0xe4f86e9489333f6f, 0x65570cabe384565a, 0x431be002593cd98b, 0xd494b131325e6e8b, 0x6f6ebcd61912681f, 0x9f00417244640166, 0x208d812f29a4c965, 0xb8af5bb4b05a107e, 0xb8fb7865aa7d066f, 0x2c460c203b8e7955, 0x0536c37526b48b42, 0x49e0dfa8e9dd15ca, 0x93663e257ae452ad, 0xae13cd9d648b3f99, 0xbde3beeae5cb052c, 0xb392f730f3424785, 0xb8b89b6a1801bfe8, 0x66392d33b094f909, 0x70ad09fc45688e0b, 0x1a9dfdd4d6008c6b, 0x463bb2794e4cbc54, 0xd85afdaf45b66112, 0xbe2e76fcb0a95468, 0x2559044bb3d4d052, 0xb446512aa5b41d26, 0x449c7c99751312ee, 0x9ab3b77ae1c9bb9b, 0x09fbb69e595d0ee6, 0 }
			#define VF_INIT      {0x7e5575da2265ce5c, 0x3c0936cf20d46b0a, 0xb90121079d634fb3, 0x089847b7c3154c7a, 0x19ef4be76b747800, 0xca8f8360f3c3e0b3, 0xffa653ea51129373, 0x1185fdaa03c8fc1d, 0xf92cd7faeb21eabe, 0x5c0ef33ffb0acb45, 0x73acad8fe8257a28, 0xafb959e832cfe986, 0xdcb983e31f7461d6, 0xc0e577f2aa5efc28, 0xf2f5a00641e7809c, 0x26bc5d730d3b421c, 0xb57f5e2f31d0bcf1, 0x9166e20ff4861aa2, 0xe9eef393082b379b, 0x8c271208e2f0d321, 0x3e3369f031925848, 0x3814c2a6c87a864b, 0xf8b9bb810ebee736, 0x26c573f0fa2f9ebf, 0xe7a61c455cc8b056, 0x801d8a490438309b, 0xaefe2bc27b2ad409, 0x76a717ee6a779a73, 0xaf76380029a30bc1, 0xd8392c47e51ad8e8, 0xb2aad95df2cbcae0, 0x297b984d8ddc4f96, 0 }
		#endif
	#endif					
#endif

#endif
